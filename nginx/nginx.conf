server {
    listen 443 ssl;
    server_name mychesss.com www.mychesss.com mychess-17135679.ap-southeast-1.elb.amazonaws.com;

    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;

    # Route /api/v1/auth to auth-service
    location /api/v1/auth/ {
        proxy_pass http://auth-service:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Route /api/v1/player to player-service
    location /api/v1/player/ {
        proxy_pass http://player-service:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Route /api/v1/match to match-service
    location /api/v1/match/ {
        proxy_pass http://match-service:8082;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Route /api/v1/tournament to tournament-service
    location /api/v1/tournament/ {
        proxy_pass http://tournament-service:8083;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Route /api/v1/admin to admin-service
    location /api/v1/admin/ {
        proxy_pass http://admin-service:8084;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Route /api/v1/email to email-service
    location /api/v1/email/ {
        proxy_pass http://email-service:8085;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check endpoint
    location /health {
        return 200 "OK";
        add_header Content-Type text/plain;
    }
}

# Redirect all HTTP (non-HTTPS) requests to HTTPS
server {
    listen 80;
    server_name mychesss.com www.mychesss.com mychess-17135679.ap-southeast-1.elb.amazonaws.com;

    # Health check route
    location /health {
        return 200 "OK";
        add_header Content-Type text/plain;
    }

    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}