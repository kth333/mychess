memberSearchIndex = [{"p":"com.g1.mychess.auth.client","c":"AdminServiceClient","l":"AdminServiceClient(String, WebClient.Builder)","u":"%3Cinit%3E(java.lang.String,org.springframework.web.reactive.function.client.WebClient.Builder)"},{"p":"com.g1.mychess.auth.controller","c":"AuthController","l":"AuthController(AuthService, WebClient.Builder, JwtUtil)","u":"%3Cinit%3E(com.g1.mychess.auth.service.AuthService,org.springframework.web.reactive.function.client.WebClient.Builder,com.g1.mychess.auth.util.JwtUtil)"},{"p":"com.g1.mychess.auth.config","c":"SecurityConfig","l":"authenticationManager(AuthenticationConfiguration)","u":"authenticationManager(org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration)"},{"p":"com.g1.mychess.auth","c":"AuthServiceApplication","l":"AuthServiceApplication()","u":"%3Cinit%3E()"},{"p":"com.g1.mychess.auth.service.impl","c":"AuthServiceImpl","l":"AuthServiceImpl(PasswordEncoder, JwtUtil, PlayerServiceClient, AdminServiceClient, EmailServiceClient, TokenService)","u":"%3Cinit%3E(org.springframework.security.crypto.password.PasswordEncoder,com.g1.mychess.auth.util.JwtUtil,com.g1.mychess.auth.client.PlayerServiceClient,com.g1.mychess.auth.client.AdminServiceClient,com.g1.mychess.auth.client.EmailServiceClient,com.g1.mychess.auth.service.TokenService)"},{"p":"com.g1.mychess.auth.service","c":"AuthServiceTest","l":"AuthServiceTest()","u":"%3Cinit%3E()"},{"p":"com.g1.mychess.auth.config","c":"SecurityConfig","l":"corsConfigurationSource()"},{"p":"com.g1.mychess.auth.client","c":"PlayerServiceClient","l":"createPlayer(RegisterRequestDTO)","u":"createPlayer(com.g1.mychess.auth.dto.RegisterRequestDTO)"},{"p":"com.g1.mychess.auth.initializer","c":"DataInitializer","l":"DataInitializer()","u":"%3Cinit%3E()"},{"p":"com.g1.mychess.auth.filter","c":"JwtRequestFilter","l":"doFilterInternal(HttpServletRequest, HttpServletResponse, FilterChain)","u":"doFilterInternal(jakarta.servlet.http.HttpServletRequest,jakarta.servlet.http.HttpServletResponse,jakarta.servlet.FilterChain)"},{"p":"com.g1.mychess.auth.model","c":"UserToken.TokenType","l":"EMAIL_VERIFICATION"},{"p":"com.g1.mychess.auth.exception","c":"EmailAlreadyVerifiedException","l":"EmailAlreadyVerifiedException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.g1.mychess.auth.exception","c":"EmailNotVerifiedException","l":"EmailNotVerifiedException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"EmailRequestDTO","l":"EmailRequestDTO()","u":"%3Cinit%3E()"},{"p":"com.g1.mychess.auth.exception","c":"EmailSendFailedException","l":"EmailSendFailedException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.g1.mychess.auth.client","c":"EmailServiceClient","l":"EmailServiceClient(String, WebClient.Builder)","u":"%3Cinit%3E(java.lang.String,org.springframework.web.reactive.function.client.WebClient.Builder)"},{"p":"com.g1.mychess.auth.util","c":"JwtUtil","l":"extractClaim(String, Function<Claims, T>)","u":"extractClaim(java.lang.String,java.util.function.Function)"},{"p":"com.g1.mychess.auth.util","c":"JwtUtil","l":"extractExpiration(String)","u":"extractExpiration(java.lang.String)"},{"p":"com.g1.mychess.auth.util","c":"JwtUtil","l":"extractRole(String)","u":"extractRole(java.lang.String)"},{"p":"com.g1.mychess.auth.util","c":"JwtUtil","l":"extractUsername(String)","u":"extractUsername(java.lang.String)"},{"p":"com.g1.mychess.auth.client","c":"AdminServiceClient","l":"fetchAdminByUsername(String)","u":"fetchAdminByUsername(java.lang.String)"},{"p":"com.g1.mychess.auth.client","c":"PlayerServiceClient","l":"fetchPlayerByEmail(String)","u":"fetchPlayerByEmail(java.lang.String)"},{"p":"com.g1.mychess.auth.client","c":"PlayerServiceClient","l":"fetchPlayerById(Long)","u":"fetchPlayerById(java.lang.Long)"},{"p":"com.g1.mychess.auth.client","c":"PlayerServiceClient","l":"fetchPlayerByUsername(String)","u":"fetchPlayerByUsername(java.lang.String)"},{"p":"com.g1.mychess.auth.repository","c":"UserTokenRepository","l":"findByTokenAndTokenType(String, UserToken.TokenType)","u":"findByTokenAndTokenType(java.lang.String,com.g1.mychess.auth.model.UserToken.TokenType)"},{"p":"com.g1.mychess.auth.repository","c":"UserTokenRepository","l":"findByUserIdAndTokenTypeAndUsed(Long, UserToken.TokenType, boolean)","u":"findByUserIdAndTokenTypeAndUsed(java.lang.Long,com.g1.mychess.auth.model.UserToken.TokenType,boolean)"},{"p":"com.g1.mychess.auth.repository","c":"UserTokenRepository","l":"findByUserIdAndUserTypeAndTokenType(Long, String, UserToken.TokenType)","u":"findByUserIdAndUserTypeAndTokenType(java.lang.Long,java.lang.String,com.g1.mychess.auth.model.UserToken.TokenType)"},{"p":"com.g1.mychess.auth.repository","c":"UserTokenRepository","l":"findByUserIdAndUserTypeAndTokenTypeAndUsed(Long, String, UserToken.TokenType, boolean)","u":"findByUserIdAndUserTypeAndTokenTypeAndUsed(java.lang.Long,java.lang.String,com.g1.mychess.auth.model.UserToken.TokenType,boolean)"},{"p":"com.g1.mychess.auth.util","c":"JwtUtil","l":"generateRefreshToken(UserDetails)","u":"generateRefreshToken(org.springframework.security.core.userdetails.UserDetails)"},{"p":"com.g1.mychess.auth.service","c":"TokenService","l":"generateToken(Long, String, UserToken.TokenType, LocalDateTime)","u":"generateToken(java.lang.Long,java.lang.String,com.g1.mychess.auth.model.UserToken.TokenType,java.time.LocalDateTime)"},{"p":"com.g1.mychess.auth.util","c":"JwtUtil","l":"generateToken(UserDetails)","u":"generateToken(org.springframework.security.core.userdetails.UserDetails)"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"getBirthDate()"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"getCity()"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"getCountry()"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"getEmail()"},{"p":"com.g1.mychess.auth.dto","c":"UserDTO","l":"getEmail()"},{"p":"com.g1.mychess.auth.model","c":"UserToken","l":"getExpirationTime()"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"getGender()"},{"p":"com.g1.mychess.auth.dto","c":"PlayerCreationResponseDTO","l":"getMessage()"},{"p":"com.g1.mychess.auth.dto","c":"ResetPasswordRequestDTO","l":"getNewPassword()"},{"p":"com.g1.mychess.auth.dto","c":"UpdatePasswordRequestDTO","l":"getNewPassword()"},{"p":"com.g1.mychess.auth.dto","c":"LoginRequestDTO","l":"getPassword()"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"getPassword()"},{"p":"com.g1.mychess.auth.dto","c":"UserDTO","l":"getPassword()"},{"p":"com.g1.mychess.auth.dto","c":"PlayerCreationResponseDTO","l":"getPlayerId()"},{"p":"com.g1.mychess.auth.dto","c":"UpdatePasswordRequestDTO","l":"getPlayerId()"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"getRegion()"},{"p":"com.g1.mychess.auth.dto","c":"ResetPasswordRequestDTO","l":"getResetToken()"},{"p":"com.g1.mychess.auth.dto","c":"LoginRequestDTO","l":"getRole()"},{"p":"com.g1.mychess.auth.dto","c":"UserDTO","l":"getRole()"},{"p":"com.g1.mychess.auth.dto","c":"EmailRequestDTO","l":"getTo()"},{"p":"com.g1.mychess.auth.model","c":"UserToken","l":"getToken()"},{"p":"com.g1.mychess.auth.model","c":"UserToken","l":"getTokenType()"},{"p":"com.g1.mychess.auth.dto","c":"UserDTO","l":"getUserId()"},{"p":"com.g1.mychess.auth.model","c":"UserToken","l":"getUserId()"},{"p":"com.g1.mychess.auth.dto","c":"EmailRequestDTO","l":"getUsername()"},{"p":"com.g1.mychess.auth.dto","c":"LoginRequestDTO","l":"getUsername()"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"getUsername()"},{"p":"com.g1.mychess.auth.dto","c":"UserDTO","l":"getUsername()"},{"p":"com.g1.mychess.auth.dto","c":"EmailRequestDTO","l":"getUserToken()"},{"p":"com.g1.mychess.auth.model","c":"UserToken","l":"getUserType()"},{"p":"com.g1.mychess.auth.global","c":"GlobalExceptionHandler","l":"GlobalExceptionHandler()","u":"%3Cinit%3E()"},{"p":"com.g1.mychess.auth.global","c":"GlobalExceptionHandler","l":"handleEmailAlreadyVerifiedException(EmailAlreadyVerifiedException)","u":"handleEmailAlreadyVerifiedException(com.g1.mychess.auth.exception.EmailAlreadyVerifiedException)"},{"p":"com.g1.mychess.auth.global","c":"GlobalExceptionHandler","l":"handleEmailNotVerifiedException(EmailNotVerifiedException)","u":"handleEmailNotVerifiedException(com.g1.mychess.auth.exception.EmailNotVerifiedException)"},{"p":"com.g1.mychess.auth.global","c":"GlobalExceptionHandler","l":"handleEmailSendFailedException(EmailSendFailedException)","u":"handleEmailSendFailedException(com.g1.mychess.auth.exception.EmailSendFailedException)"},{"p":"com.g1.mychess.auth.global","c":"GlobalExceptionHandler","l":"handleGeneralException(Exception)","u":"handleGeneralException(java.lang.Exception)"},{"p":"com.g1.mychess.auth.global","c":"GlobalExceptionHandler","l":"handleInvalidCredentialsException(InvalidCredentialsException)","u":"handleInvalidCredentialsException(com.g1.mychess.auth.exception.InvalidCredentialsException)"},{"p":"com.g1.mychess.auth.global","c":"GlobalExceptionHandler","l":"handleInvalidPasswordException(InvalidPasswordException)","u":"handleInvalidPasswordException(com.g1.mychess.auth.exception.InvalidPasswordException)"},{"p":"com.g1.mychess.auth.global","c":"GlobalExceptionHandler","l":"handleInvalidRoleException(InvalidRoleException)","u":"handleInvalidRoleException(com.g1.mychess.auth.exception.InvalidRoleException)"},{"p":"com.g1.mychess.auth.global","c":"GlobalExceptionHandler","l":"handlePlayerServiceException(PlayerServiceException)","u":"handlePlayerServiceException(com.g1.mychess.auth.exception.PlayerServiceException)"},{"p":"com.g1.mychess.auth.global","c":"GlobalExceptionHandler","l":"handleUserAlreadyExistsException(UserAlreadyExistsException)","u":"handleUserAlreadyExistsException(com.g1.mychess.auth.exception.UserAlreadyExistsException)"},{"p":"com.g1.mychess.auth.global","c":"GlobalExceptionHandler","l":"handleUserNotFoundException(UserNotFoundException)","u":"handleUserNotFoundException(com.g1.mychess.auth.exception.UserNotFoundException)"},{"p":"com.g1.mychess.auth.global","c":"GlobalExceptionHandler","l":"handleVerificationTokenException(UserTokenException)","u":"handleVerificationTokenException(com.g1.mychess.auth.exception.UserTokenException)"},{"p":"com.g1.mychess.auth.controller","c":"AuthController","l":"healthCheck()"},{"p":"com.g1.mychess.auth.exception","c":"InvalidCredentialsException","l":"InvalidCredentialsException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.g1.mychess.auth.exception","c":"InvalidEmailException","l":"InvalidEmailException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.g1.mychess.auth.exception","c":"InvalidPasswordException","l":"InvalidPasswordException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.g1.mychess.auth.exception","c":"InvalidRoleException","l":"InvalidRoleException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.g1.mychess.auth.service","c":"AuthService","l":"isEmailVerified(Long, String)","u":"isEmailVerified(java.lang.Long,java.lang.String)"},{"p":"com.g1.mychess.auth.service.impl","c":"AuthServiceImpl","l":"isEmailVerified(Long, String)","u":"isEmailVerified(java.lang.Long,java.lang.String)"},{"p":"com.g1.mychess.auth.service","c":"TokenService","l":"isEmailVerified(Long, String)","u":"isEmailVerified(java.lang.Long,java.lang.String)"},{"p":"com.g1.mychess.auth.model","c":"UserToken","l":"isUsed()"},{"p":"com.g1.mychess.auth.service.impl","c":"AuthServiceImpl","l":"isValidEmail(String)","u":"isValidEmail(java.lang.String)"},{"p":"com.g1.mychess.auth.service.impl","c":"AuthServiceImpl","l":"isValidPassword(String)","u":"isValidPassword(java.lang.String)"},{"p":"com.g1.mychess.auth.filter","c":"JwtRequestFilter","l":"JwtRequestFilter(JwtUtil)","u":"%3Cinit%3E(com.g1.mychess.auth.util.JwtUtil)"},{"p":"com.g1.mychess.auth.util","c":"JwtUtil","l":"JwtUtil()","u":"%3Cinit%3E()"},{"p":"com.g1.mychess.auth.controller","c":"AuthController","l":"login(LoginRequestDTO)","u":"login(com.g1.mychess.auth.dto.LoginRequestDTO)"},{"p":"com.g1.mychess.auth.service","c":"AuthService","l":"login(String, String, String)","u":"login(java.lang.String,java.lang.String,java.lang.String)"},{"p":"com.g1.mychess.auth.service.impl","c":"AuthServiceImpl","l":"login(String, String, String)","u":"login(java.lang.String,java.lang.String,java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"LoginRequestDTO","l":"LoginRequestDTO()","u":"%3Cinit%3E()"},{"p":"com.g1.mychess.auth","c":"AuthServiceApplication","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"com.g1.mychess.auth.service","c":"TokenService","l":"markTokenAsUsed(UserToken)","u":"markTokenAsUsed(com.g1.mychess.auth.model.UserToken)"},{"p":"com.g1.mychess.auth.model","c":"UserToken.TokenType","l":"PASSWORD_RESET"},{"p":"com.g1.mychess.auth.config","c":"SecurityConfig","l":"passwordEncoder()"},{"p":"com.g1.mychess.auth.dto","c":"PlayerCreationResponseDTO","l":"PlayerCreationResponseDTO(Long, String)","u":"%3Cinit%3E(java.lang.Long,java.lang.String)"},{"p":"com.g1.mychess.auth.client","c":"PlayerServiceClient","l":"PlayerServiceClient(String, WebClient.Builder)","u":"%3Cinit%3E(java.lang.String,org.springframework.web.reactive.function.client.WebClient.Builder)"},{"p":"com.g1.mychess.auth.exception","c":"PlayerServiceException","l":"PlayerServiceException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.g1.mychess.auth.controller","c":"AuthController","l":"register(RegisterRequestDTO)","u":"register(com.g1.mychess.auth.dto.RegisterRequestDTO)"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"RegisterRequestDTO()","u":"%3Cinit%3E()"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"RegisterRequestDTO(String, String, String, String, String, String, String, LocalDate)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate)"},{"p":"com.g1.mychess.auth.service","c":"AuthService","l":"registerUser(RegisterRequestDTO)","u":"registerUser(com.g1.mychess.auth.dto.RegisterRequestDTO)"},{"p":"com.g1.mychess.auth.service.impl","c":"AuthServiceImpl","l":"registerUser(RegisterRequestDTO)","u":"registerUser(com.g1.mychess.auth.dto.RegisterRequestDTO)"},{"p":"com.g1.mychess.auth.controller","c":"AuthController","l":"requestPasswordReset(String)","u":"requestPasswordReset(java.lang.String)"},{"p":"com.g1.mychess.auth.service","c":"AuthService","l":"requestPasswordReset(String)","u":"requestPasswordReset(java.lang.String)"},{"p":"com.g1.mychess.auth.service.impl","c":"AuthServiceImpl","l":"requestPasswordReset(String)","u":"requestPasswordReset(java.lang.String)"},{"p":"com.g1.mychess.auth.controller","c":"AuthController","l":"resendVerificationEmail(String)","u":"resendVerificationEmail(java.lang.String)"},{"p":"com.g1.mychess.auth.service","c":"AuthService","l":"resendVerificationEmail(String)","u":"resendVerificationEmail(java.lang.String)"},{"p":"com.g1.mychess.auth.service.impl","c":"AuthServiceImpl","l":"resendVerificationEmail(String)","u":"resendVerificationEmail(java.lang.String)"},{"p":"com.g1.mychess.auth.controller","c":"AuthController","l":"resetPassword(ResetPasswordRequestDTO)","u":"resetPassword(com.g1.mychess.auth.dto.ResetPasswordRequestDTO)"},{"p":"com.g1.mychess.auth.service","c":"AuthService","l":"resetPassword(String, String)","u":"resetPassword(java.lang.String,java.lang.String)"},{"p":"com.g1.mychess.auth.service.impl","c":"AuthServiceImpl","l":"resetPassword(String, String)","u":"resetPassword(java.lang.String,java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"ResetPasswordRequestDTO","l":"ResetPasswordRequestDTO()","u":"%3Cinit%3E()"},{"p":"com.g1.mychess.auth.dto","c":"ResetPasswordRequestDTO","l":"ResetPasswordRequestDTO(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"com.g1.mychess.auth.initializer","c":"DataInitializer","l":"run(String...)","u":"run(java.lang.String...)"},{"p":"com.g1.mychess.auth.config","c":"SecurityConfig","l":"SecurityConfig(JwtRequestFilter)","u":"%3Cinit%3E(com.g1.mychess.auth.filter.JwtRequestFilter)"},{"p":"com.g1.mychess.auth.config","c":"SecurityConfig","l":"securityFilterChain(HttpSecurity)","u":"securityFilterChain(org.springframework.security.config.annotation.web.builders.HttpSecurity)"},{"p":"com.g1.mychess.auth.client","c":"EmailServiceClient","l":"sendPasswordResetEmail(EmailRequestDTO)","u":"sendPasswordResetEmail(com.g1.mychess.auth.dto.EmailRequestDTO)"},{"p":"com.g1.mychess.auth.client","c":"EmailServiceClient","l":"sendVerificationEmail(EmailRequestDTO)","u":"sendVerificationEmail(com.g1.mychess.auth.dto.EmailRequestDTO)"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"setBirthDate(LocalDate)","u":"setBirthDate(java.time.LocalDate)"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"setCity(String)","u":"setCity(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"setCountry(String)","u":"setCountry(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"setEmail(String)","u":"setEmail(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"UserDTO","l":"setEmail(String)","u":"setEmail(java.lang.String)"},{"p":"com.g1.mychess.auth.model","c":"UserToken","l":"setExpirationTime(LocalDateTime)","u":"setExpirationTime(java.time.LocalDateTime)"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"setGender(String)","u":"setGender(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"PlayerCreationResponseDTO","l":"setMessage(String)","u":"setMessage(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"ResetPasswordRequestDTO","l":"setNewPassword(String)","u":"setNewPassword(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"UpdatePasswordRequestDTO","l":"setNewPassword(String)","u":"setNewPassword(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"LoginRequestDTO","l":"setPassword(String)","u":"setPassword(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"setPassword(String)","u":"setPassword(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"UserDTO","l":"setPassword(String)","u":"setPassword(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"PlayerCreationResponseDTO","l":"setPlayerId(Long)","u":"setPlayerId(java.lang.Long)"},{"p":"com.g1.mychess.auth.dto","c":"UpdatePasswordRequestDTO","l":"setPlayerId(Long)","u":"setPlayerId(java.lang.Long)"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"setRegion(String)","u":"setRegion(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"ResetPasswordRequestDTO","l":"setResetToken(String)","u":"setResetToken(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"LoginRequestDTO","l":"setRole(String)","u":"setRole(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"UserDTO","l":"setRole(String)","u":"setRole(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"EmailRequestDTO","l":"setTo(String)","u":"setTo(java.lang.String)"},{"p":"com.g1.mychess.auth.model","c":"UserToken","l":"setToken(String)","u":"setToken(java.lang.String)"},{"p":"com.g1.mychess.auth.model","c":"UserToken","l":"setTokenType(UserToken.TokenType)","u":"setTokenType(com.g1.mychess.auth.model.UserToken.TokenType)"},{"p":"com.g1.mychess.auth.service","c":"AuthServiceTest","l":"setUp()"},{"p":"com.g1.mychess.auth.model","c":"UserToken","l":"setUsed(boolean)"},{"p":"com.g1.mychess.auth.dto","c":"UserDTO","l":"setUserId(Long)","u":"setUserId(java.lang.Long)"},{"p":"com.g1.mychess.auth.model","c":"UserToken","l":"setUserId(Long)","u":"setUserId(java.lang.Long)"},{"p":"com.g1.mychess.auth.dto","c":"EmailRequestDTO","l":"setUsername(String)","u":"setUsername(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"LoginRequestDTO","l":"setUsername(String)","u":"setUsername(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"RegisterRequestDTO","l":"setUsername(String)","u":"setUsername(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"UserDTO","l":"setUsername(String)","u":"setUsername(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"EmailRequestDTO","l":"setUserToken(String)","u":"setUserToken(java.lang.String)"},{"p":"com.g1.mychess.auth.model","c":"UserToken","l":"setUserType(String)","u":"setUserType(java.lang.String)"},{"p":"com.g1.mychess.auth.service","c":"TokenService","l":"TokenService(UserTokenRepository)","u":"%3Cinit%3E(com.g1.mychess.auth.repository.UserTokenRepository)"},{"p":"com.g1.mychess.auth.client","c":"PlayerServiceClient","l":"updatePassword(Long, String)","u":"updatePassword(java.lang.Long,java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"UpdatePasswordRequestDTO","l":"UpdatePasswordRequestDTO(Long, String)","u":"%3Cinit%3E(java.lang.Long,java.lang.String)"},{"p":"com.g1.mychess.auth.exception","c":"UserAlreadyExistsException","l":"UserAlreadyExistsException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.g1.mychess.auth.dto","c":"UserDTO","l":"UserDTO()","u":"%3Cinit%3E()"},{"p":"com.g1.mychess.auth.exception","c":"UserNotFoundException","l":"UserNotFoundException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.g1.mychess.auth.exception","c":"UserServiceException","l":"UserServiceException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.g1.mychess.auth.model","c":"UserToken","l":"UserToken()","u":"%3Cinit%3E()"},{"p":"com.g1.mychess.auth.model","c":"UserToken","l":"UserToken(String, LocalDateTime, UserToken.TokenType, Long, String)","u":"%3Cinit%3E(java.lang.String,java.time.LocalDateTime,com.g1.mychess.auth.model.UserToken.TokenType,java.lang.Long,java.lang.String)"},{"p":"com.g1.mychess.auth.exception","c":"UserTokenException","l":"UserTokenException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.g1.mychess.auth.util","c":"JwtUtil","l":"validateToken(String, UserDetails)","u":"validateToken(java.lang.String,org.springframework.security.core.userdetails.UserDetails)"},{"p":"com.g1.mychess.auth.service","c":"TokenService","l":"validateToken(String, UserToken.TokenType)","u":"validateToken(java.lang.String,com.g1.mychess.auth.model.UserToken.TokenType)"},{"p":"com.g1.mychess.auth.model","c":"UserToken.TokenType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.g1.mychess.auth.model","c":"UserToken.TokenType","l":"values()"},{"p":"com.g1.mychess.auth.exception","c":"VerificationTokenException","l":"VerificationTokenException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.g1.mychess.auth.controller","c":"AuthController","l":"verifyEmail(String)","u":"verifyEmail(java.lang.String)"},{"p":"com.g1.mychess.auth.service","c":"AuthService","l":"verifyEmail(String)","u":"verifyEmail(java.lang.String)"},{"p":"com.g1.mychess.auth.service.impl","c":"AuthServiceImpl","l":"verifyEmail(String)","u":"verifyEmail(java.lang.String)"}];updateSearchResults();