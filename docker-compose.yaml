services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs/fullchain.pem:/etc/nginx/certs/fullchain.pem
      - ./nginx/certs/privkey.pem:/etc/nginx/certs/privkey.pem
    networks:
      - backend

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    image: "${DOCKER_USERNAME}/auth-service:latest"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - backend

  player-service:
    build:
      context: ./player-service
      dockerfile: Dockerfile
    image: "${DOCKER_USERNAME}/player-service:latest"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - backend

  match-service:
    build:
      context: ./match-service
      dockerfile: Dockerfile
    image: "${DOCKER_USERNAME}/match-service:latest"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - backend

  tournament-service:
    build:
      context: ./tournament-service
      dockerfile: Dockerfile
    image: "${DOCKER_USERNAME}/tournament-service:latest"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - backend

  admin-service:
    build:
      context: ./admin-service
      dockerfile: Dockerfile
    image: "${DOCKER_USERNAME}/admin-service:latest"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - backend

  email-service:
    build:
      context: ./email-service
      dockerfile: Dockerfile
    image: "${DOCKER_USERNAME}/email-service:latest"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - backend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: "${DOCKER_USERNAME}/frontend:latest"
    ports:
      - "3000:3000"
    networks:
      - backend

networks:
  backend:
    driver: bridge