version: '3.8'

networks:
  my_network:
    driver: bridge

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs/fullchain.pem:/etc/nginx/certs/fullchain.pem
      - ./nginx/certs/privkey.pem:/etc/nginx/certs/privkey.pem
    depends_on:
      - auth-service
      - player-service
      - match-service
      - tournament-service
      - admin-service
      - email-service
      - frontend
    networks:
      - my_network

  auth-service:
    build:
      context: ./auth-service
    image: "${DOCKER_USERNAME}/auth-service:latest"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    env_file:
      - .env
    expose:
      - "8080"
    networks:
      - my_network

  player-service:
    build:
      context: ./player-service
    image: "${DOCKER_USERNAME}/player-service:latest"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    env_file:
      - .env
    expose:
      - "8081"
    networks:
      - my_network

  match-service:
    build:
      context: ./match-service
    image: "${DOCKER_USERNAME}/match-service:latest"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    env_file:
      - .env
    expose:
      - "8082"
    networks:
      - my_network

  tournament-service:
    build:
      context: ./tournament-service
    image: "${DOCKER_USERNAME}/tournament-service:latest"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    env_file:
      - .env
    expose:
      - "8083"
    networks:
      - my_network

  admin-service:
    build:
      context: ./admin-service
    image: "${DOCKER_USERNAME}/admin-service:latest"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    env_file:
      - .env
    expose:
      - "8084"
    networks:
      - my_network

  email-service:
    build:
      context: ./email-service
    image: "${DOCKER_USERNAME}/email-service:latest"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    env_file:
      - .env
    expose:
      - "8085"
    networks:
      - my_network

  frontend:
    build:
      context: ./frontend
    image: "${DOCKER_USERNAME}/frontend:latest"
    expose:
      - "3000"
    networks:
      - my_network